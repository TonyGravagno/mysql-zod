import W from"node:path";import z from"fs-extra";import P from"knex";import E from"camelcase";function S(t,m,o){const g=o.nullish&&o.nullish===!0,C=o.requiredString&&o.requiredString===!0,n=t.split("(")[0].split(" ")[0],p=m==="YES",r=["z.string()"],c=["z.number()"],f=g?"nullish()":"nullable()",d="nonnegative()",b="min(1)";switch(n){case"date":case"datetime":case"timestamp":case"time":case"year":case"char":case"varchar":case"tinytext":case"text":case"mediumtext":case"longtext":case"json":case"decimal":return p?r.push(f):C&&r.push(b),r.join(".");case"tinyint":case"smallint":case"mediumint":case"int":case"bigint":case"float":case"double":return t.endsWith(" unsigned")&&c.push(d),p&&c.push(f),c.join(".");case"enum":return`z.enum([${t.replace("enum(","").replace(")","").replace(/,/g,", ")}])`}}async function v(t){const m=P({client:"mysql2",connection:{host:t.host,port:t.port,user:t.user,password:t.password,database:t.database}}),o=t.camelCase!==void 0&&t.camelCase!==!1,g=e=>o?E(e,typeof t.camelCase!="boolean"?t.camelCase:void 0):e;let n=(await m.raw("SELECT table_name as table_name FROM information_schema.tables WHERE table_schema = ?",[t.database]))[0].map(e=>e.table_name).filter(e=>!e.startsWith("knex_")).sort();const p=t.tables,r=p?.filter(e=>e.startsWith("/")&&e.endsWith("/")),c=p?.filter(e=>r?.includes(e));c&&c.length&&(n=n.filter(e=>{if(c.includes(e))return!0;let i=!1;return r&&r.length&&r.forEach(u=>{const s=u.substring(1,u.length-1);e.match(s)!==null&&(i=!0)}),i}));const f=t.ignore,d=f?.filter(e=>e.startsWith("/")&&e.endsWith("/")),b=f?.filter(e=>!d?.includes(e));b&&b.length&&(n=n.filter(e=>!b.includes(e))),d&&d.length&&(n=n.filter(e=>{let i=!0;return d.forEach(u=>{const s=u.substring(1,u.length-1);e.match(s)!==null&&(i=!1)}),i}));const y=t.modify;for(const e of n){const u=(await m.raw(`DESC ${e}`))[0];let s=e;y&&y.length&&(s=y.reduce((a,l)=>{if(l[0].startsWith("/")&&l[0].endsWith("/")){const w=l[0].substring(1,l[0].length-1);a.match(w)!==null&&(a=a.replace(new RegExp(w),l[1]))}else a=a.replace(l[0],l[1]);return a},s)),s=g(s);let h=`import z from 'zod'

export const ${s} = z.object({`;for(const a of u){const l=o?E(a.Field):a.Field,$=S(a.Type,a.Null,t);h=`${h}
  ${l}: ${$},`}h=`${h}
})

export type ${g(`${s}Type`)} = z.infer<typeof ${s}>
`;const N=t.folder&&t.folder!==""?t.folder:".",T=t.suffix&&t.suffix!==""?`${s}.${t.suffix}.ts`:`${s}.ts`,x=W.join(N,T);console.log("Created:",x),z.outputFileSync(x,h)}await m.destroy()}export{v as generate};
